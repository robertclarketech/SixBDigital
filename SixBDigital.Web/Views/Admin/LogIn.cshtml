@model SixBDigital.Domain.Queries.AdminLogInQuery
@{
	ViewData["Title"] = "Log In";
	var parms = new Dictionary<string, string>
	{
		{ "ReturnUrl", @Context.Request.Query["ReturnUrl"] },
	};
}
<h3>Log In</h3>
<br />
<form asp-controller="Admin" asp-action="LogIn" method="post" asp-all-route-data="parms">
	@if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
	{
		<div class="alert alert-danger" role="alert">
			<a class="close" data-dismiss="alert">Ã—</a>
			@foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
			{
				<span>@modelError.ErrorMessage</span>
			}
		</div>
	}
	<div class="form-group">
		@Html.LabelFor(model => model.Username)
		<input class="form-control" asp-for="Username" />
		<span asp-validation-for="Username" class="text-danger"></span>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Password)
		<input class="form-control" type="password" asp-for="Password" />
		<span asp-validation-for="Password" class="text-danger"></span>
	</div>
	<button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts
{
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
